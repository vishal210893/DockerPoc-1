name: Build and Deploy

on:
  push:
    branches:
      - learning/github-action

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      USER: vishal210893
      REPO_NAME: dockerpoc-1

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java environment
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 3: Build the project using Maven
      - name: Maven build
        run: mvn -q install

      # Step 4: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Log in to GitHub Container Registry (GHCR)
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_PASSWORD }}

      # Step 6: Set the Docker image tag
      - name: Set image tag
        run: |
          echo "DOCKER_IMAGE=${USER}/${REPO_NAME}:$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV
          echo "GHCR_IMAGE=${REPO_NAME}:$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

      # Step 7: Set up QEMU for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Step 8: Set up Docker Buildx for building images
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:master

      # Step 9: Build and push Docker images to registries
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.DOCKER_IMAGE }}
            ghcr.io/${{ github.repository_owner }}/${{ env.GHCR_IMAGE }}

      # Step 10: Update the Deployment YAML file with the new image tag
      - name: Update Deployment YAML
        run: |
          sed -i'' -e "s|image: ${USER}/${REPO_NAME}:.*|image: ${DOCKER_IMAGE}|g" K8s_Yaml/App/Deployment.yaml
          cat K8s_Yaml/App/Deployment.yaml

      # Step 11: Commit and push the updated Deployment YAML file to the repository
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add K8s_Yaml/App/Deployment.yaml
          git commit -m "Updated Deployment image to $IMAGE"
          git push origin ${{ github.ref_name }}