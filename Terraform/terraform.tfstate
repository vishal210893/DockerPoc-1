{
  "version": 4,
  "terraform_version": "1.5.7",
  "serial": 6,
  "lineage": "45e7640a-8ed0-19a4-9bf5-fe0e5bfd5feb",
  "outputs": {
    "helm_release_name": {
      "value": "dockerpoc",
      "type": "string"
    },
    "helm_release_namespace": {
      "value": "default",
      "type": "string"
    },
    "helm_release_status": {
      "value": "deployed",
      "type": "string"
    },
    "ingress_service_name": {
      "value": "dockerpoc-1",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "dockerpoc",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "../Helm",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "dockerpoc",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.0.0",
                "chart": "dockerpoc-chart",
                "first_deployed": 1747850713,
                "last_deployed": 1747850713,
                "name": "dockerpoc",
                "namespace": "default",
                "notes": "# dockerpoc-chart/templates/NOTES.txt",
                "revision": 1,
                "values": "{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":10,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"containerPorts\":{\"debug\":5005,\"http\":8005},\"envSecret\":{\"create\":true,\"name\":\"env-secret\",\"stringData\":{\"SECRET-VALUE\":\"Helm chart secret value\"}},\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"vishal210893/dockerpoc-1\",\"tag\":\"20250520-172921\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{\"nginx.ingress.kubernetes.io/rewrite-target\":\"/$1\",\"nginx.ingress.kubernetes.io/use-regex\":\"true\"},\"className\":\"nginx\",\"enabled\":true,\"paths\":[{\"backend\":{\"serviceName\":\"dockerpoc-1\",\"servicePortName\":\"http\"},\"path\":\"/ingress/(.*)\",\"pathType\":\"ImplementationSpecific\"}],\"tls\":[]},\"nameOverride\":\"\",\"nodePortService\":{\"enabled\":false,\"nameSuffix\":\"-nodeport\",\"nodePort\":30080,\"port\":8006,\"targetPortName\":\"http\"},\"nodeSelector\":{},\"persistence\":{\"accessModes\":[\"ReadWriteMany\"],\"enabled\":true,\"pv\":{\"enabled\":true,\"hostPath\":\"/Users/viskumar/mountpath\",\"name\":\"pv-volume\",\"reclaimPolicy\":\"Retain\"},\"pvcName\":\"file-pvc\",\"size\":\"1Gi\",\"storageClass\":\"dockerpoc-sc\"},\"podAnnotations\":{},\"podSecurityContext\":{},\"replicaCount\":1,\"resources\":{\"limits\":{\"cpu\":\"3\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"1Gi\"}},\"securityContext\":{},\"service\":{\"port\":8008,\"targetPortName\":\"http\",\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"create\":false,\"name\":\"\"},\"storageClass\":{\"enabled\":true,\"name\":\"dockerpoc-sc\",\"parameters\":{\"type\":\"pd-ssd\"},\"provisioner\":\"k8s.io/minikube-hostpath\",\"reclaimPolicy\":\"Retain\",\"volumeBindingMode\":\"Immediate\"},\"tolerations\":[]}",
                "version": "0.1.0"
              }
            ],
            "name": "dockerpoc",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# dockerpoc-chart/values.yaml\nreplicaCount: 1\n\nimage:\n  repository: vishal210893/dockerpoc-1\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: \"20250520-172921\"\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: false\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\npodAnnotations: {}\npodSecurityContext: {}\n# fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n# runAsUser: 1000\n\nservice:\n  type: ClusterIP\n  port: 8008 # Port for the ClusterIP service\n  targetPortName: http # Name of the target port on the pod (from deployment.yaml)\n\ncontainerPorts:\n  http: 8005\n  debug: 5005\n\ningress:\n  enabled: true\n  className: \"nginx\"\n  annotations:\n    nginx.ingress.kubernetes.io/use-regex: \"true\"\n    nginx.ingress.kubernetes.io/rewrite-target: /$1\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n\n  paths:\n    - path: /ingress/(.*)\n      pathType: ImplementationSpecific\n      backend:\n        serviceName: dockerpoc-1\n        servicePortName: http\n\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources:\n  requests:\n    memory: \"1Gi\"\n    cpu: \"1\"\n  limits:\n    memory: \"2Gi\"\n    cpu: \"3\"\n\n# Environment variables from secrets\n# Set create to false if you manage the secret externally\nenvSecret:\n  create: true\n  name: \"env-secret\" # Name of the Kubernetes Secret object\n  stringData:\n    SECRET-VALUE: \"Helm chart secret value\" # The actual secret value\n\npersistence:\n  enabled: true\n  pvcName: \"file-pvc\" # Name of the PersistentVolumeClaim\n  accessModes:\n    - ReadWriteMany # Be cautious with ReadWriteMany for hostPath on single node setups\n  size: \"1Gi\"\n  # If storageClass is \"\", the default StorageClass will be used.\n  # If set to \"-\", no storageClassName spec is set, allowing cluster default or PV binding.\n  # Or specify your custom storage class name.\n  storageClass: \"dockerpoc-sc\"\n\n  # Configuration for a pre-existing or manually provisioned PersistentVolume\n  # Set pv.enabled to false if using dynamic provisioning with the StorageClass above\n  pv:\n    enabled: true # Set to false if your StorageClass handles dynamic provisioning\n    name: \"pv-volume\"\n    # storageClass must match persistence.storageClass if pv.enabled and persistence.storageClass are set\n    # For hostPath, this PV is tied to a specific node.\n    hostPath: \"/Users/viskumar/mountpath\" # Node-specific path\n    reclaimPolicy: Retain\n\nstorageClass:\n  enabled: true # Set to false if you use an existing StorageClass or cluster default\n  name: \"dockerpoc-sc\"\n  provisioner: \"k8s.io/minikube-hostpath\" # Change for cloud CSI driver or other provisioners\n  parameters:\n    type: \"pd-ssd\" # Example parameter, specific to provisioner\n  reclaimPolicy: Retain # Or Delete\n  volumeBindingMode: Immediate # Or WaitForFirstConsumer\n  # allowVolumeExpansion: true\n\n# Optional NodePort service configuration (from your commented out section)\nnodePortService:\n  enabled: false\n  nameSuffix: \"-nodeport\"\n  port: 8006\n  targetPortName: http\n  nodePort: 30080\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 10\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\nnodeSelector: {}\ntolerations: []\naffinity: {}"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.app_namespace"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
