import org.apache.hadoop.conf.Configuration;
import software.amazon.awssdk.auth.credentials.AwsSessionCredentials;
import software.amazon.awssdk.auth.credentials.ProfileCredentialsProvider;
import software.amazon.awssdk.services.glue.GlueClient;
import software.amazon.awssdk.services.glue.model.GetTableRequest;
import software.amazon.awssdk.services.glue.model.GetTableResponse;
import software.amazon.awssdk.regions.Region;

import org.apache.iceberg.catalog.TableIdentifier;
import org.apache.iceberg.hadoop.HadoopCatalog;
import org.apache.iceberg.Table;

import java.util.HashMap;
import java.util.Map;

public class GlueCatalogService {

    public void getFilteredData(String featureKey, String timestamp) {
        try {
            // Step 1: Load AWS session credentials from profile
            ProfileCredentialsProvider profileProvider = ProfileCredentialsProvider.builder()
                    .profileName("adfs")
                    .build();

            AwsSessionCredentials sessionCredentials = (AwsSessionCredentials) profileProvider.resolveCredentials();

            // Step 2: Build Glue Client using profile
            GlueClient glueClient = GlueClient.builder()
                    .region(Region.US_EAST_1)
                    .credentialsProvider(profileProvider)
                    .build();

            // Step 3: Get Glue table metadata
            GetTableRequest getTableRequest = GetTableRequest.builder()
                    .databaseName("your_db_name")
                    .name("your_table_name")
                    .build();

            GetTableResponse getTableResponse = glueClient.getTable(getTableRequest);

            System.out.println("Retrieved table info: " + getTableResponse.table().name());

            // Step 4: Configure Hadoop with S3 session credentials
            Configuration hadoopConf = new Configuration();
            hadoopConf.set("fs.s3a.access.key", sessionCredentials.accessKeyId());
            hadoopConf.set("fs.s3a.secret.key", sessionCredentials.secretAccessKey());
            hadoopConf.set("fs.s3a.session.token", sessionCredentials.sessionToken());

            // Optional tuning
            hadoopConf.set("fs.s3a.aws.credentials.provider",
                    "org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider");

            // Step 5: Build Iceberg HadoopCatalog with S3 warehouse location
            String warehouseLocation = "s3a://your-bucket/path/to/warehouse";

            HadoopCatalog catalog = new HadoopCatalog(hadoopConf, warehouseLocation);
            Map<String, String> properties = new HashMap<>();

            // Step 6: Load Iceberg table
            TableIdentifier tableId = TableIdentifier.of("your_db_name", "your_table_name");
            Table table = catalog.loadTable(tableId);

            System.out.println("✅ Loaded table: " + table.name());

        } catch (Exception e) {
            System.err.println("❌ Failed to load table from Glue/Iceberg");
            e.printStackTrace();
        }
    }
}
