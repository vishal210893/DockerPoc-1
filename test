
package com.mycompany.iceberg;

import org.apache.iceberg.aws.AwsClientFactory;
import software.amazon.awssdk.auth.credentials.AwsSessionCredentials;
import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;
import software.amazon.awssdk.core.client.config.ClientOverrideConfiguration;
import software.amazon.awssdk.core.interceptor.ExecutionInterceptor;
import software.amazon.awssdk.services.glue.GlueClient;
import software.amazon.awssdk.services.glue.GlueClientBuilder;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.S3ClientBuilder;

public class StaticAwsClientFactory implements AwsClientFactory {

  private StaticCredentialsProvider credsProvider() {
    AwsSessionCredentials creds = AwsSessionCredentials.create(
      System.getenv("AWS_ACCESS_KEY_ID"),
      System.getenv("AWS_SECRET_ACCESS_KEY"),
      System.getenv("AWS_SESSION_TOKEN")
    );
    return StaticCredentialsProvider.create(creds);
  }

  @Override
  public <T> T create(AwsClientBuilder<T, ?> builder) {
    // Apply the same static creds and region to every AWS client
    builder.credentialsProvider(credsProvider())
           .region(software.amazon.awssdk.regions.Region.of(
               System.getenv("AWS_REGION")));
    return builder.build();
  }
}







<!-- Iceberg Core -->
    <dependency>
        <groupId>org.apache.iceberg</groupId>
        <artifactId>iceberg-core</artifactId>
        <version>1.4.3</version>
    </dependency>

    <!-- Iceberg Glue Catalog -->
    <dependency>
        <groupId>org.apache.iceberg</groupId>
        <artifactId>iceberg-aws</artifactId>
        <version>1.4.3</version>
    </dependency>

    <!-- Hadoop AWS support -->
    <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-aws</artifactId>
        <version>3.3.6</version>
    </dependency>

    <!-- Parquet Tools -->
    <dependency>
        <groupId>org.apache.parquet</groupId>
        <artifactId>parquet-tools</artifactId>
        <version>1.13.1</version>
    </dependency>

    <!-- Iceberg Parquet -->
    <dependency>
        <groupId>org.apache.iceberg</groupId>
        <artifactId>iceberg-parquet</artifactId>
        <version>1.4.3</version>
    </dependency>

 Configuration hadoopConf = new Configuration();
        hadoopConf.set("fs.s3a.access.key", "<AWS_ACCESS_KEY>");
        hadoopConf.set("fs.s3a.secret.key", "<AWS_SECRET_KEY>");
        hadoopConf.set("fs.s3a.endpoint", "s3.amazonaws.com");
        hadoopConf.set("fs.s3a.path.style.access", "true");

        GlueCatalog catalog = new GlueCatalog();
        catalog.setConf(hadoopConf);
        catalog.initialize("glue", null);

        Table table = catalog.loadTable(TableIdentifier.of("db_name", "table_name"));

        System.out.println("Schema: " + table.schema().asStruct());


Map<String, String> properties = new HashMap<>();
properties.put("warehouse", "s3://your-bucket/your-warehouse-path/");
properties.put("io-impl", "org.apache.iceberg.aws.s3.S3FileIO");
properties.put("catalog-impl", "org.apache.iceberg.aws.glue.GlueCatalog");
properties.put("uri", "https://glue.<region>.amazonaws.com"); // Optional
