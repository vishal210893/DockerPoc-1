üöÄ {{ .Chart.Name | title }} deployed!

üìã Release:
  Name: {{ .Release.Name }}
  Namespace: {{ .Release.Namespace }}
  Chart: {{ .Chart.Version }}
  App: {{ .Chart.AppVersion }}

üåê Access:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range $path := $host.paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ $path.path | replace "(.*)" "" | replace "/(.*)" "/" }}
  {{- end }}
{{- end }}
{{- else if contains "LoadBalancer" .Values.service.type }}
  Service: LoadBalancer (wait for IP)
  kubectl get svc --namespace {{ .Release.Namespace }} {{ include "dockerpoc-app.fullname" . }} -w
{{- else if contains "NodePort" .Values.service.type }}
  Service: NodePort
  export NODE_PORT=$(kubectl get svc {{ include "dockerpoc-app.fullname" . }} -n {{ .Release.Namespace }} -o jsonpath='{.spec.ports[0].nodePort}')
  export NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[0].address}')
  echo "URL: http://$NODE_IP:$NODE_PORT"
{{- else }}
  Service: ClusterIP
  kubectl port-forward -n {{ .Release.Namespace }} svc/{{ include "dockerpoc-app.fullname" . }} {{ .Values.service.port }}:{{ .Values.service.port }}
  Then: http://localhost:{{ .Values.service.port }}
{{- end }}

üìä Status:
{{- if .Values.autoscaling.enabled }}
  HPA: {{ .Values.autoscaling.minReplicas }}-{{ .Values.autoscaling.maxReplicas }}
{{- else }}
  Replicas: {{ .Values.replicaCount }}
{{- end }}
{{- if .Values.persistence.enabled }}
  PVC: {{ include "dockerpoc-app.pvcName" . }} ({{ .Values.persistence.size }})
{{- end }}

‚ÑπÔ∏è  Next steps:
  - helm test {{ .Release.Name }} --namespace {{ .Release.Namespace }}   # run chart tests
  - helm upgrade --install ...                                           # apply changes
  - helm rollback {{ .Release.Name }} <REVISION>                         # rollback
